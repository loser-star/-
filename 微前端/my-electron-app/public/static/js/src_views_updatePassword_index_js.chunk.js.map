{"version":3,"file":"static/js/src_views_updatePassword_index_js.chunk.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAEA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;AClHA;AAEA","sources":["G:/github/my/微前端/meeting_room_booking_system_frontend_user/src/views/updatePassword/index.js","G:/github/my/微前端/meeting_room_booking_system_frontend_user/src/views/updatePassword/style.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport { Button, Form, Input, message } from \"antd\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\nimport { UpdatePasswordWrapper } from \"./style.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { updatePasswordCaptcha, updatePassword } from \"@/api\";\r\nexport default function UpdatePassword() {\r\n  const layout1 = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n\r\n  const [form] = useForm();\r\n  const navigate = useNavigate();\r\n\r\n  const onFinish = useCallback(async (values) => {\r\n    if (values.password !== values.confirmPassword) {\r\n      return message.error(\"两次密码不一致\");\r\n    }\r\n    const res = await updatePassword(values);\r\n\r\n    const { data } = res.data;\r\n\r\n    if (res.status === 201 || res.status === 200) {\r\n      message.success(\"密码修改成功\");\r\n      setTimeout(() => {\r\n        navigate(\"/login\");\r\n      }, 1500);\r\n    } else {\r\n      message.error(data || \"系统繁忙，请稍后再试\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  const sendCaptcha = useCallback(async function () {\r\n    const address = form.getFieldValue(\"email\");\r\n    if (!address) {\r\n      return message.error(\"请输入邮箱地址\");\r\n    }\r\n\r\n    const res = await updatePasswordCaptcha(address);\r\n    if (res.status === 201 || res.status === 200) {\r\n      message.success(res.data.data);\r\n    } else {\r\n      message.error(\"系统繁忙，请稍后再试\");\r\n    }\r\n  }, [form]);\r\n\r\n  return (\r\n    <UpdatePasswordWrapper>\r\n      <h1>会议室预订系统</h1>\r\n      <Form\r\n        form={form}\r\n        {...layout1}\r\n        onFinish={onFinish}\r\n        colon={false}\r\n        autoComplete=\"off\"\r\n      >\r\n        {/* 用户名 */}\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: \"请输入用户名!\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"邮箱\"\r\n          name=\"email\"\r\n          rules={[\r\n            { required: true, message: \"请输入邮箱!\" },\r\n            { type: \"email\", message: \"请输入合法邮箱地址!\" },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <div className=\"captcha-wrapper\">\r\n          <Form.Item\r\n            label=\"验证码\"\r\n            name=\"captcha\"\r\n            rules={[{ required: true, message: \"请输入验证码!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Button type=\"primary\" onClick={sendCaptcha}>\r\n            发送验证码\r\n          </Button>\r\n        </div>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: \"请输入密码!\" }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"确认密码\"\r\n          name=\"confirmPassword\"\r\n          rules={[{ required: true, message: \"请输入确认密码!\" }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...layout1} label=\" \">\r\n          <Button className=\"btn\" type=\"primary\" htmlType=\"submit\">\r\n            修改\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </UpdatePasswordWrapper>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const UpdatePasswordWrapper = styled.div`\r\n  width: 400px;\r\n  margin: 100px auto 0 auto;\r\n  text-align: center;\r\n\r\n  .links {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  .btn {\r\n    width: 100%;\r\n  }\r\n\r\n  .captcha-wrapper {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n"],"names":[],"sourceRoot":""}